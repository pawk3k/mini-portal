/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { PropsWithChildren } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { RigidBody } from "@react-three/rapier";

type GLTFResult = GLTF & {
  nodes: {
    Plane: THREE.Mesh;
  };
  materials: {};
};

export function Model(
  props: PropsWithChildren<JSX.IntrinsicElements["group"]>
) {
  const { nodes } = useGLTF("/portal-scene.glb") as GLTFResult;
  return (
    <RigidBody type="fixed" ccd colliders="trimesh">
      <group {...props} dispose={null}>
        <mesh
          name="Plane"
          castShadow
          receiveShadow
          geometry={nodes.Plane.geometry}
          material={nodes.Plane.material}
        />
        {props.children}
      </group>
    </RigidBody>
  );
}

useGLTF.preload("/portal-scene.glb");
export default Model;
